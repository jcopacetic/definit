# Generated by Django 5.1.9 on 2025-05-18 20:02

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('slug', models.SlugField(editable=False, max_length=255, unique=True)),
                ('name', models.CharField(max_length=80)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('deprecated', 'Deprecated'), ('disabled', 'Disabled')], default='draft', max_length=20)),
                ('version', models.CharField(default='1.0.0', max_length=20)),
                ('is_public', models.BooleanField(default=False, help_text='Whether this feature is publicly available')),
                ('requires_authentication', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('icon', models.CharField(blank=True, help_text='Font awesome icon name', max_length=50)),
                ('priority', models.IntegerField(default=0, help_text='Priority order (higher numbers appear first)')),
                ('config', models.JSONField(blank=True, default=dict, help_text='General configuration options stored as JSON')),
            ],
            options={
                'ordering': ['-priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='HubSpotToExcelSheet',
            fields=[
                ('feature_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='features.feature')),
                ('file_name', models.CharField(max_length=280)),
                ('worksheet_position', models.IntegerField(default=0)),
                ('file_id', models.CharField(blank=True, max_length=280)),
                ('worksheet_id', models.CharField(blank=True, max_length=280)),
                ('last_row', models.IntegerField(default=2)),
                ('hubspot_object_type', models.CharField(default='contacts', max_length=50)),
                ('hubspot_properties', models.JSONField(default=list, help_text='List of properties to fetch')),
            ],
            options={
                'abstract': False,
            },
            bases=('features.feature',),
        ),
        migrations.CreateModel(
            name='FeatureCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('description', models.TextField(blank=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='features.featurecategory')),
            ],
            options={
                'verbose_name_plural': 'Feature Categories',
            },
        ),
        migrations.AddField(
            model_name='feature',
            name='categories',
            field=models.ManyToManyField(blank=True, related_name='%(class)s_features', to='features.featurecategory'),
        ),
        migrations.CreateModel(
            name='ScheduledHubSpotExport',
            fields=[
                ('hubspottoexcelsheet_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='features.hubspottoexcelsheet')),
                ('schedule_type', models.CharField(choices=[('manual', 'Manual'), ('interval', 'Interval-based'), ('cron', 'Cron Expression')], default='manual', max_length=20)),
                ('interval_value', models.IntegerField(default=1)),
                ('interval_unit', models.CharField(choices=[('minutes', 'Minutes'), ('hours', 'Hours'), ('days', 'Days'), ('weeks', 'Weeks')], default='days', max_length=10)),
                ('cron_expression', models.CharField(blank=True, max_length=100)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('max_records', models.IntegerField(default=1000)),
            ],
            options={
                'abstract': False,
            },
            bases=('features.hubspottoexcelsheet', models.Model),
        ),
        migrations.CreateModel(
            name='FeatureDependency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dependent_feature_id', models.UUIDField()),
                ('required_feature_id', models.UUIDField()),
                ('dependency_type', models.CharField(choices=[('required', 'Required'), ('optional', 'Optional'), ('incompatible', 'Incompatible')], default='required', max_length=20)),
                ('dependent_feature_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependent_features', to='contenttypes.contenttype')),
                ('required_feature_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_for_features', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name_plural': 'Feature Dependencies',
                'unique_together': {('dependent_feature_type', 'dependent_feature_id', 'required_feature_type', 'required_feature_id')},
            },
        ),
        migrations.CreateModel(
            name='FeatureSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_id', models.UUIDField()),
                ('key', models.CharField(max_length=100)),
                ('value_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('boolean', 'Boolean'), ('json', 'JSON')], max_length=20)),
                ('string_value', models.TextField(blank=True, null=True)),
                ('integer_value', models.IntegerField(blank=True, null=True)),
                ('float_value', models.FloatField(blank=True, null=True)),
                ('boolean_value', models.BooleanField(blank=True, null=True)),
                ('json_value', models.JSONField(blank=True, null=True)),
                ('feature_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'unique_together': {('feature_type', 'feature_id', 'key')},
            },
        ),
    ]
